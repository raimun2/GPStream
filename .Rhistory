devtools::create("GPStream")
library(devtools)
build()
install()
create_package()
use_readme_rmd()
library(devtools)
use_readme_rmd()
library(GPStream)
library(GPStream)
library(GPStream)
library(GPStream)
load_sream_file()
load_stream_file()
? load_stream_file
library(GPStream)
library(GPStream)
load_stream_file("hola.")
read_stream_file("hola.")
library(GPStream)
read_stream_file("hola.")
?agregate
?aggregate
?get_elev_point
my.data <- readRDS("data/strava_metadata.rda")
library(tidyverse)
write_rds(my.data, "data/strava_metadata.rds")
my.data <- readRDS("data/strava_streams.rda")
write_rds(my.data, "data/strava_streams.rds")
install.packages("Rtools")
library(GPStream)
aa <- readRDS("data/strava_metadata.rds")
saveRDS(aa,"data/strava_metadata.RData")
aa <- readRDS("data/strava_streams.rds")
saveRDS(aa,"data/strava_streams.RData")
aa <- readRDS("data/strava_streams.RData")
saveRDS(aa,"data/strava_streams.RData", version=2)
aa <- readRDS("data/strava_metadata.rds")
saveRDS(aa,"data/strava_metadata.RData", version=2)
aa <- readRDS("data/strava_metadata.RData")
saveRDS(aa,"data/strava_metadata.RData", version=2)
aa <- readRDS("data/strava_streams.RData")
saveRDS(aa,"data/strava_streams.RData", version=2)
aa <- readRDS("data/strava_metadata.RData")
saveRDS(aa,"data/strava_metadata.RData", version=2)
aa <- readRDS("data/strava_streams.rds")
saveRDS(aa,"data/strava_streams.RData", version=2)
aa <- readRDS("data/strava_metadata.rds")
saveRDS(aa,"data/strava_metadata.RData", version=2)
devtools::use_data(aa, internal = TRUE)
aa <- readRDS("data/strava_streams.rds")
ab <- readRDS("data/strava_metadata.rds")
dput(aa, "data/strava_streams.rda")
dput(ab, "data/strava_metadata.rda")
tools::resaveRdaFiles()
tools::resaveRdaFiles("data")
library(tidyverse)
write_rds(aa, "data/strava_streams.rda", version = 2)
write_rds(ab, "data/strava_metadata.rda", version = 2)
devtools::use_data(aa, internal = TRUE)
? version
write.csv(aa, file="data/strava_streams.rda")
write.csv(ab, file="data/strava_metadata.rda")
write.csv(aa, file="data/strava_streams.rdata")
write.csv(ab, file="data/strava_metadata.rdata")
View(ab)
View(aa)
dput(aa, "data/strava_streams.rda")
dput(ab, "data/strava_metadata.rda")
dput(ab, "data/strava_metadata.rda")
? dput
dput(aa, "data/strava_streams.rda", control="all")
dput(ab, "data/strava_metadata.rda", control = "all")
? saveRDS
? load_data
load_data()
pkgload::load_data()
saveRDS(aa,"data/strava_streams.RData", version=2)
saveRDS(ab,"data/strava_metadata.RData", version=2)
pkgload::load_data()
saveRDS(aa,"data/strava_streams.RData")
saveRDS(ab,"data/strava_metadata.RData")
pkgload::load_data()
load("data/strava_metadata.rdata")
? load
save(aa, "data/strava_streams.rda")
save(aa, file = "data/strava_streams.rda")
save(ab, file = "data/strava_metadata.rda")
load("data/strava_streams.rda")
load("data/strava_metadata.rda")
load("data/strava_streams.rda")
load("data/strava_metadata.rda")
strava_streams <- aa
strava_metadata <- ab
save(strava_metadata, file = "data/strava_metadata.rda")
save(strava_streams, file = "data/strava_streams.rda")
save(strava_metadata, file = "data/strava_metadata.rda")
load("data/strava_streams.rda")
load("data/strava_metadata.rda")
View(strava_streams)
library(GPStream)
library(GPStream)
library(GPStream)
Esta es una librería de uso público para análisis de datos de recorridos deportivos. Se podrán encontrar funciones para cargar los datos, procesarlos, corregir la elevación de un recorrido, entre otros. (AGREGAR FUNCIONES MÁS IMPORTANTES). Para la captura de datos se utilizo la librería de _rStrava_. <https://github.com/fawda123/rStrava>
knitr::opts_chunk$set(echo = TRUE)
```{r}
```{r message=FALSE, eval=FALSE}
install.packages('devtools')
install.packages('devtools')
install.packages("devtools")
devtools::install_github('raimun2/GPStream')
summary(data)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
```{r, echo=FALSE}
```{r cars, echo=FALSE}
```{r cars, echo=FALSE}
install.packages('devtools')
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github('raimun2/GPStream')
install.packages("plotKML")
devtools::install_github('raimun2/GPStream')
load("C:/Users/raimu/Dropbox/Github/GPStream/data/strava_streams.rda")
View(strava_streams)
